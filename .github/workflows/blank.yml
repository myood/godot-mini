name: ☁ Server Builds
on: [push, pull_request]

# Global Cache Settings
env:
  GODOT_BASE_BRANCH: 3.2
  SCONSFLAGS: platform=server verbose=yes warnings=all werror=yes debug_symbols=no --jobs=2
  SCONS_CACHE_LIMIT: 4096

jobs:
  linux-editor:
    runs-on: "ubuntu-20.04"
    name: Linux Headless w/ Mono (target=release_debug, tools=yes)

    steps:
      - uses: actions/checkout@v2

      # Azure repositories are not reliable, we need to prevent azure giving us packages.
      - name: Make apt sources.list use the default Ubuntu repositories
        run: |
          sudo bash -c -- 'echo "deb http://archive.ubuntu.com/ubuntu/ focal main restricted universe multiverse" > /etc/apt/sources.list'
          sudo bash -c -- 'echo "deb http://archive.ubuntu.com/ubuntu/ focal-updates main restricted universe multiverse" > /etc/apt/sources.list'
          sudo bash -c -- 'echo "deb http://archive.ubuntu.com/ubuntu/ focal-security main restricted universe multiverse" > /etc/apt/sources.list'
          sudo bash -c -- 'echo "deb http://archive.ubuntu.com/ubuntu/ focal-backports main restricted universe multiverse" > /etc/apt/sources.list'
          sudo apt-get update
      # Install all packages (except scons)
      - name: Configure dependencies
        run: |
          sudo apt-get install build-essential pkg-config libx11-dev libxcursor-dev \
            libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev libudev-dev libxi-dev libxrandr-dev yasm
      # Use python 3.x release (works cross platform; best to keep self contained in it's own step)
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      # Setup scons, print python version and scons version info, so if anything is broken it won't run the build.
      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons
          python --version
          scons --version
      # We should always be explicit with our flags usage here since it's gonna be sure to always set those flags
      - name: Compilation
        run: |
          chmod +x ${GITHUB_WORKSPACE}/compile_godot.sh
          ${GITHUB_WORKSPACE}/compile_godot.sh
        #scons -j2 verbose=yes warnings=all werror=yes platform=server tools=yes target=release_debug module_mono_enabled=yes mono_glue=no
